// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto.Data;

namespace Proyecto.Migrations
{
    [DbContext(typeof(BDContext))]
    [Migration("20210622032254_OtraMas")]
    partial class OtraMas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Proyecto.Models.Academia", b =>
                {
                    b.Property<int>("ID_academia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID_academia");

                    b.ToTable("Academia");
                });

            modelBuilder.Entity("Proyecto.Models.Docente", b =>
                {
                    b.Property<int>("Nomina")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido_Materno")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellido_Paterno")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Coordinador")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha_Ingreso")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Nacimiento")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id_Academia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Plantel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.HasKey("Nomina");

                    b.HasIndex("Id_Academia");

                    b.HasIndex("Id_Plantel");

                    b.ToTable("Docente");
                });

            modelBuilder.Entity("Proyecto.Models.Permiso", b =>
                {
                    b.Property<int>("Id_Permiso")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Motivo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Valido")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Permiso");

                    b.HasIndex("Id_Tipo");

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("Proyecto.Models.Permiso_Docente", b =>
                {
                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Docente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Permiso")
                        .HasColumnType("INTEGER");

                    b.HasKey("Numero");

                    b.ToTable("Permiso_Docente");
                });

            modelBuilder.Entity("Proyecto.Models.Plantel", b =>
                {
                    b.Property<int>("Id_Plantel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Plantel");

                    b.ToTable("Plantel");
                });

            modelBuilder.Entity("Proyecto.Models.Tipo_Permiso", b =>
                {
                    b.Property<int>("ID_permiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID_permiso");

                    b.ToTable("Tipo_Permiso");
                });

            modelBuilder.Entity("Proyecto.Models.Docente", b =>
                {
                    b.HasOne("Proyecto.Models.Academia", "Academia")
                        .WithMany("DocentesAcademia")
                        .HasForeignKey("Id_Academia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Models.Plantel", "Plantel")
                        .WithMany("DocentesPlantel")
                        .HasForeignKey("Id_Plantel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Models.Permiso_Docente", "docentePermiso")
                        .WithOne("docentePermiso")
                        .HasForeignKey("Proyecto.Models.Docente", "Nomina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academia");

                    b.Navigation("docentePermiso");

                    b.Navigation("Plantel");
                });

            modelBuilder.Entity("Proyecto.Models.Permiso", b =>
                {
                    b.HasOne("Proyecto.Models.Permiso_Docente", "permisoDocente")
                        .WithOne("permisoDocente")
                        .HasForeignKey("Proyecto.Models.Permiso", "Id_Permiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Models.Tipo_Permiso", "Tipo")
                        .WithMany("Permisos")
                        .HasForeignKey("Id_Tipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("permisoDocente");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Proyecto.Models.Academia", b =>
                {
                    b.Navigation("DocentesAcademia");
                });

            modelBuilder.Entity("Proyecto.Models.Permiso_Docente", b =>
                {
                    b.Navigation("docentePermiso");

                    b.Navigation("permisoDocente");
                });

            modelBuilder.Entity("Proyecto.Models.Plantel", b =>
                {
                    b.Navigation("DocentesPlantel");
                });

            modelBuilder.Entity("Proyecto.Models.Tipo_Permiso", b =>
                {
                    b.Navigation("Permisos");
                });
#pragma warning restore 612, 618
        }
    }
}
